{"version":3,"sources":["services/spotify-service.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js","components/title/styled-title.tsx","components/spotify-top/spotify-top-artists.tsx","services/spotify-auth.ts"],"names":["getUserTopArtists","timeRange","limit","a","spotifyToken","checkSpotifyTokenAndRefresh","fetch","method","headers","Authorization","userTopArtistsResults","json","Promise","reject","strings","raw","slice","Object","freeze","defineProperties","value","StyledTitle","styled","h1","props","fontSize","theme","fontAlt","primary","ArtistSelector","artist","selected","setSelectedArtist","setCurrentElementPos","currentElementPos","onClick","e","event","selectedElement","currentTarget","newPosition","offsetLeft","parentElement","scrollTo","top","left","behavior","scrollToElement","className","alt","src","images","url","name","SelectedArtist","popularity","genres","length","map","genre","index","key","SpotifyTopArtists","selectedTimeRange","useContext","AppContext","useState","artists","setArtists","selectedArtist","scrollSelector","selectorElement","document","querySelector","scrollAmount","offsetWidth","scrollBy","useEffect","then","result","items","GrantType","cryptoRandomString","require","sha256","Base64","REDIRECT_URI","process","CLIENT_ID","spotifyAuthRequestUri","verifierCode","type","localStorage","setItem","base64URLEncode","challengeCode","stateCode","token","getWithExpiry","getUserAccessToken","REFRESH","getItem","grantType","stateResponse","authCode","spotifyRefreshTokenRequest","grant_type","refresh_token","client_id","fetchTokenFromSpotify","spotifyTokenRequest","code","redirect_uri","code_verifier","body","encodeFormData","spotifyTokens","tokens","access_token","setWithExpiry","expires_in","hash","toString","replace","data","keys","encodeURIComponent","join"],"mappings":"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","file":"static/js/6.c536d9a4.chunk.js","sourcesContent":["import { checkSpotifyTokenAndRefresh } from \"./spotify-auth\";\nimport { Artist, Track } from \"./spotify-types\";\n\nconst SPOTIFY_API_URL = \"https://api.spotify.com/v1\";\n\nexport const getUserTopArtists = async (\n  timeRange: string,\n  limit?: number\n): Promise<UserTopArtists> => {\n  const spotifyToken = checkSpotifyTokenAndRefresh();\n  if (spotifyToken) {\n    const userTopArtistsResults = await fetch(\n      `${SPOTIFY_API_URL}/me/top/artists?time_range=${timeRange}${\n        limit ? `&limit=${limit}` : \"\"\n      }`,\n      {\n        method: \"GET\",\n        headers: {\n          Authorization: `Bearer ${spotifyToken}`,\n        },\n      }\n    );\n\n    return userTopArtistsResults.json();\n  }\n\n  return Promise.reject(\"Invalid spotify auth token :(\");\n};\n\ninterface UserTopArtists {\n  items: Array<Artist>;\n}\n\ninterface UserTopTracks {\n  items: Array<Track>;\n}\n","export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}","import styled from \"styled-components\";\n\nexport const StyledTitle = styled.h1<{ fontSize?: string }>`\n  font-size: ${(props) => (props.fontSize ? props.fontSize : \"60px\")};\n  font-family: ${(props) => props.theme.fontAlt};\n  color: ${(props) => props.theme.primary};\n  font-weight: unset;\n  @media only screen and (max-width: 768px) {\n    font-size: 34px;\n  }\n`;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { ThemeContext } from \"styled-components\";\nimport { AppContext } from \"../../AppContext\";\nimport { getUserTopArtists } from \"../../services/spotify-service\";\nimport { Artist } from \"../../services/spotify-types\";\nimport { StyledTitle } from \"../title/styled-title\";\nimport \"./spotify-top.scss\";\n\nconst SpotifyTopArtists = () => {\n  const { selectedTimeRange } = useContext(AppContext);\n  const [artists, setArtists] = useState([] as Array<Artist>);\n  const [selectedArtist, setSelectedArtist] = useState({} as Artist);\n  const [currentElementPos, setCurrentElementPos] = useState(0);\n\n  const scrollSelector = (left: boolean) => {\n    const selectorElement = document.querySelector(\n      \".spotify-top__selector\"\n    ) as HTMLDivElement;\n    const scrollAmount = selectorElement.offsetWidth * (1 - 0.05);\n    selectorElement.scrollBy({\n      top: 0,\n      left: left ? -scrollAmount : scrollAmount,\n      behavior: \"smooth\",\n    });\n  };\n\n  useEffect(() => {\n    getUserTopArtists(`${selectedTimeRange}_term`).then((result) => {\n      setArtists(result.items);\n      setSelectedArtist(result.items && result.items[0]);\n      //TODO Scroll to start of selector\n    });\n\n    /* const artists = getDummyArtists(); */\n    /*     setArtists(artists);\n    setSelectedArtist(artists[0]); */\n  }, [selectedTimeRange]);\n\n  return (\n    <div className=\"spotify-top fade-in\">\n      <StyledTitle fontSize=\"60px\">Your top artists</StyledTitle>\n      <div className=\"spotify-top__scroll-buttons\"></div>\n      <div className=\"spotify-top__selector-container\">\n        <div\n          className=\"spotify-top__selector-container__scroll\"\n          onClick={() => scrollSelector(true)}\n        >\n          {\"<\"}\n        </div>\n        <div className=\"spotify-top__selector fade-in\">\n          {artists &&\n            artists.map((artist, index) => (\n              <ArtistSelector\n                artist={artist}\n                selected={artist === selectedArtist}\n                setSelectedArtist={setSelectedArtist}\n                setCurrentElementPos={setCurrentElementPos}\n                currentElementPos={currentElementPos}\n                key={index}\n              />\n            ))}\n        </div>\n        <div\n          className=\"spotify-top__selector-container__scroll\"\n          onClick={() => scrollSelector(false)}\n        >\n          {\">\"}\n        </div>\n      </div>\n\n      {selectedArtist && <SelectedArtist artist={selectedArtist} />}\n    </div>\n  );\n};\n\nconst ArtistSelector = ({\n  artist,\n  selected,\n  setSelectedArtist,\n  setCurrentElementPos,\n  currentElementPos,\n}: {\n  artist: Artist;\n  selected: boolean;\n  setSelectedArtist: Function;\n  setCurrentElementPos: Function;\n  currentElementPos: number;\n}) => {\n  const scrollToElement = (event: any) => {\n    //TODO Remove this function..\n    const scrollOffset = 300;\n    const selectedElement = event.currentTarget;\n    const selectedElementPos = selectedElement.offsetLeft;\n    const newPosition =\n      selectedElementPos > currentElementPos\n        ? currentElementPos + scrollOffset\n        : currentElementPos - scrollOffset;\n\n    selectedElement.parentElement.scrollTo({\n      top: 0,\n      left: newPosition,\n      behavior: \"smooth\",\n    });\n\n    setCurrentElementPos(newPosition);\n  };\n\n  return (\n    <div\n      onClick={(e) => {\n        setSelectedArtist(artist);\n        scrollToElement(e);\n      }}\n      className={`spotify-top__selector__item fade-in ${\n        selected ? \"spotify-top__selector__item--selected\" : \"\"\n      }`}\n    >\n      <img alt=\"artist\" src={artist.images[0].url} />\n      <div className=\"spotify-top__selector__item__name\">{artist.name}</div>\n    </div>\n  );\n};\n\nconst SelectedArtist = ({ artist }: { artist: Artist }) => {\n  return (\n    <div className=\"spotify-top__selected\">\n      <div className=\"spotify-top__selected__title\">\n        <div className=\"spotify-top__selected__title__name\">{artist.name} </div>\n        <div className=\"spotify-top__selected__title__popularity\">\n          <div>{artist.popularity}</div>\n        </div>\n      </div>\n      <div className=\"spotify-top__selected__details\">\n        {artist.genres && artist.genres.length > 0 && (\n          <>\n            <div className=\"spotify-top__selected__genres\">\n              <div className=\"spotify-top__selected__genres__title\">Genres</div>\n              {artist.genres.map((genre, index) => (\n                <span key={index}> {genre} </span>\n              ))}\n            </div>\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst getDummyArtists = () => {\n  return [\n    {\n      external_urls: {\n        spotify: \"https://open.spotify.com/artist/3TVXtAsR1Inumwj472S9r4\",\n      },\n      followers: { href: null, total: 50098920 },\n      genres: [\n        \"canadian hip hop\",\n        \"canadian pop\",\n        \"hip hop\",\n        \"pop rap\",\n        \"rap\",\n        \"toronto rap\",\n      ],\n      href: \"https://api.spotify.com/v1/artists/3TVXtAsR1Inumwj472S9r4\",\n      id: \"3TVXtAsR1Inumwj472S9r4\",\n      images: [\n        {\n          height: 640,\n          url:\n            \"https://i.scdn.co/image/60cfab40c6bb160a1906be45276829d430058005\",\n          width: 640,\n        },\n        {\n          height: 320,\n          url:\n            \"https://i.scdn.co/image/5ea794cf832550943d5f8122afcf5f23ee9d85b7\",\n          width: 320,\n        },\n        {\n          height: 160,\n          url:\n            \"https://i.scdn.co/image/8eaace74aaca82eaccde400bbcab2653b9cf86e1\",\n          width: 160,\n        },\n      ],\n      name: \"Drake\",\n      popularity: 100,\n      type: \"artist\",\n      uri: \"spotify:artist:3TVXtAsR1Inumwj472S9r4\",\n    },\n    {\n      external_urls: {\n        spotify: \"https://open.spotify.com/artist/7wg1qvie3KqDNQbAkTdbX0\",\n      },\n      followers: { href: null, total: 380956 },\n      genres: [\"edm\", \"electropop\", \"pop\", \"tropical house\"],\n      href: \"https://api.spotify.com/v1/artists/7wg1qvie3KqDNQbAkTdbX0\",\n      id: \"7wg1qvie3KqDNQbAkTdbX0\",\n      images: [\n        {\n          height: 640,\n          url:\n            \"https://i.scdn.co/image/d4dead698f1d50ac7321385d76fb431d4c3e99c2\",\n          width: 640,\n        },\n        {\n          height: 320,\n          url:\n            \"https://i.scdn.co/image/4f869af238a8356ed4b65c69670f7cd8649a6251\",\n          width: 320,\n        },\n        {\n          height: 160,\n          url:\n            \"https://i.scdn.co/image/84e8595d5d8c217467cc0b9578a45cb1cd2fbe8f\",\n          width: 160,\n        },\n      ],\n      name: \"Louis The Child\",\n      popularity: 74,\n      type: \"artist\",\n      uri: \"spotify:artist:7wg1qvie3KqDNQbAkTdbX0\",\n    },\n    {\n      external_urls: {\n        spotify: \"https://open.spotify.com/artist/3TVXtAsR1Inumwj472S9r4\",\n      },\n      followers: { href: null, total: 50098920 },\n      genres: [\n        \"canadian hip hop\",\n        \"canadian pop\",\n        \"hip hop\",\n        \"pop rap\",\n        \"rap\",\n        \"toronto rap\",\n      ],\n      href: \"https://api.spotify.com/v1/artists/3TVXtAsR1Inumwj472S9r4\",\n      id: \"3TVXtAsR1Inumwj472S9r4\",\n      images: [\n        {\n          height: 640,\n          url:\n            \"https://i.scdn.co/image/60cfab40c6bb160a1906be45276829d430058005\",\n          width: 640,\n        },\n        {\n          height: 320,\n          url:\n            \"https://i.scdn.co/image/5ea794cf832550943d5f8122afcf5f23ee9d85b7\",\n          width: 320,\n        },\n        {\n          height: 160,\n          url:\n            \"https://i.scdn.co/image/8eaace74aaca82eaccde400bbcab2653b9cf86e1\",\n          width: 160,\n        },\n      ],\n      name: \"Drake2\",\n      popularity: 100,\n      type: \"artist\",\n      uri: \"spotify:artist:3TVXtAsR1Inumwj472S9r4\",\n    },\n    {\n      external_urls: {\n        spotify: \"https://open.spotify.com/artist/7wg1qvie3KqDNQbAkTdbX0\",\n      },\n      followers: { href: null, total: 380956 },\n      genres: [\"edm\", \"electropop\", \"pop\", \"tropical house\"],\n      href: \"https://api.spotify.com/v1/artists/7wg1qvie3KqDNQbAkTdbX0\",\n      id: \"7wg1qvie3KqDNQbAkTdbX0\",\n      images: [\n        {\n          height: 640,\n          url:\n            \"https://i.scdn.co/image/d4dead698f1d50ac7321385d76fb431d4c3e99c2\",\n          width: 640,\n        },\n        {\n          height: 320,\n          url:\n            \"https://i.scdn.co/image/4f869af238a8356ed4b65c69670f7cd8649a6251\",\n          width: 320,\n        },\n        {\n          height: 160,\n          url:\n            \"https://i.scdn.co/image/84e8595d5d8c217467cc0b9578a45cb1cd2fbe8f\",\n          width: 160,\n        },\n      ],\n      name: \"Louis The Child2\",\n      popularity: 74,\n      type: \"artist\",\n      uri: \"spotify:artist:7wg1qvie3KqDNQbAkTdbX0\",\n    },\n    {\n      external_urls: {\n        spotify: \"https://open.spotify.com/artist/3TVXtAsR1Inumwj472S9r4\",\n      },\n      followers: { href: null, total: 50098920 },\n      genres: [\n        \"canadian hip hop\",\n        \"canadian pop\",\n        \"hip hop\",\n        \"pop rap\",\n        \"rap\",\n        \"toronto rap\",\n      ],\n      href: \"https://api.spotify.com/v1/artists/3TVXtAsR1Inumwj472S9r4\",\n      id: \"3TVXtAsR1Inumwj472S9r4\",\n      images: [\n        {\n          height: 640,\n          url:\n            \"https://i.scdn.co/image/60cfab40c6bb160a1906be45276829d430058005\",\n          width: 640,\n        },\n        {\n          height: 320,\n          url:\n            \"https://i.scdn.co/image/5ea794cf832550943d5f8122afcf5f23ee9d85b7\",\n          width: 320,\n        },\n        {\n          height: 160,\n          url:\n            \"https://i.scdn.co/image/8eaace74aaca82eaccde400bbcab2653b9cf86e1\",\n          width: 160,\n        },\n      ],\n      name: \"Drake3\",\n      popularity: 100,\n      type: \"artist\",\n      uri: \"spotify:artist:3TVXtAsR1Inumwj472S9r4\",\n    },\n  ];\n};\n\nexport default SpotifyTopArtists;\n","import { getWithExpiry, setWithExpiry } from \"../util/storage-util\";\n\nconst cryptoRandomString = require(\"crypto-random-string\");\nconst sha256 = require(\"crypto-js/sha256\");\nconst Base64 = require(\"crypto-js/enc-base64\");\n\nconst REDIRECT_URI =\n  process.env.REACT_APP_AUTH_REDIRECT_URI || \"http://localhost:3000/callback\";\nconst CLIENT_ID = \"a3c9a895bbe94102a08574ba4f4adc9e\";\nconst REQUEST_SCOPES = \"user-top-read\";\n\nexport enum GrantType {\n  AUTH = \"authorization_code\",\n  REFRESH = \"refresh_token\",\n}\n\nexport const spotifyAuthRequestUri = async () => {\n  const verifierCode = cryptoRandomString({ length: 48, type: \"url-safe\" });\n  localStorage.setItem(\"verifierCode\", verifierCode);\n\n  const challengeCode = base64URLEncode(await sha256(verifierCode));\n\n  const stateCode = cryptoRandomString({ length: 10, type: \"url-safe\" });\n  localStorage.setItem(\"stateCode\", stateCode);\n\n  return `https://accounts.spotify.com/authorize?response_type=code&client_id=${CLIENT_ID}&redirect_uri=${REDIRECT_URI}&code_challenge_method=S256&code_challenge=${challengeCode}&state=${stateCode}&scope=${REQUEST_SCOPES}`;\n};\n\nexport const checkSpotifyTokenAndRefresh = () => {\n  const token = getWithExpiry(\"spotifyToken\");\n\n  if (token) {\n    return token;\n  } else if (getUserAccessToken(GrantType.REFRESH)) {\n    return localStorage.getItem(\"spotifyRefreshToken\");\n  }\n\n  return null;\n};\n\nexport const getUserAccessToken = async (\n  grantType: GrantType,\n  stateResponse?: string,\n  authCode?: string\n): Promise<boolean> => {\n  if (grantType === GrantType.REFRESH) {\n    const spotifyRefreshTokenRequest = {\n      grant_type: grantType,\n      refresh_token: localStorage.getItem(\"spotifyRefreshToken\"),\n      client_id: CLIENT_ID,\n    };\n\n    return fetchTokenFromSpotify(spotifyRefreshTokenRequest);\n  } else if (localStorage.getItem(\"stateCode\") === stateResponse) {\n    const spotifyTokenRequest = {\n      client_id: CLIENT_ID,\n      grant_type: grantType,\n      code: authCode,\n      redirect_uri: REDIRECT_URI,\n      code_verifier: localStorage.getItem(\"verifierCode\"),\n    };\n\n    return await fetchTokenFromSpotify(spotifyTokenRequest);\n  }\n\n  return false;\n};\n\nconst fetchTokenFromSpotify = async (spotifyTokenRequest: {}): Promise<\n  boolean\n> => {\n  const spotifyTokens = await fetch(\"https://accounts.spotify.com/api/token\", {\n    method: \"POST\",\n    body: encodeFormData(spotifyTokenRequest),\n    headers: {\n      \"Content-Type\": \"application/x-www-form-urlencoded\",\n    },\n  });\n\n  const tokens = await spotifyTokens.json();\n  if (tokens.access_token) {\n    setWithExpiry(\"spotifyToken\", tokens.access_token, tokens.expires_in);\n    localStorage.setItem(\"spotifyRefreshToken\", tokens.refresh_token);\n    return true;\n  }\n\n  return false;\n};\n\nconst base64URLEncode = (hash: any): string => {\n  return hash\n    .toString(Base64)\n    .replace(/=/g, \"\")\n    .replace(/\\+/g, \"-\")\n    .replace(/\\//g, \"_\");\n};\n\nconst encodeFormData = (data: any) => {\n  return Object.keys(data)\n    .map((key) => encodeURIComponent(key) + \"=\" + encodeURIComponent(data[key]))\n    .join(\"&\");\n};\ninterface UserToken {\n  access_token: string;\n  refresh_token: string;\n  expires_in: number;\n}\n"],"sourceRoot":""}