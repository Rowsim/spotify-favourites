{"version":3,"sources":["components/toggle-button/styled-toggle.tsx","components/top-controls/favourites-options.tsx","components/top-controls/time-range.tsx","components/top-controls/top-controls.tsx","components/vanta/vanta.tsx","pages/home.tsx","util/storage-util.ts"],"names":["StyledToggle","styled","div","props","theme","primary","selected","secondary","background","FavouritesType","useContext","AppContext","favouritesType","setFavouritesType","FavouritesOptionsContainer","onClick","TimeRange","selectedTimeRange","setSelectedTimeRange","handleClick","timeRange","spotifyTopElement","document","querySelector","style","opacity","setTimeout","TimeRangeContainer","TopControls","TopControlsContainer","VantaWrapper","children","useState","vantaEffect","setVantaEffect","vantaRef","useRef","themeContext","ThemeContext","useEffect","BIRDS","el","current","THREE","backgroundColor","color1","color2","wingSpan","speedLimit","separation","alignment","quantity","window","dispatchEvent","Event","destroy","VantaContainer","ref","SpotifySignInLazy","lazy","SpotifyTopArtistsLazy","HomePage","hasSpotifyToken","setHasSpotifyToken","getWithExpiry","setWithExpiry","key","value","ttlSeconds","item","expiry","Date","getTime","localStorage","setItem","JSON","stringify","itemStorage","getItem","parse","removeItem"],"mappings":"8oBAEO,IAAMA,EAAeC,IAAOC,IAAV,KACd,SAACC,GAAD,OAAWA,EAAMC,MAAMC,WAClB,SAACF,GAAD,OACZA,EAAMG,SAAWH,EAAMC,MAAMG,UAAYJ,EAAMC,MAAMI,cACnC,SAACL,GAAD,OAAWA,EAAMC,MAAMG,aASzB,SAACJ,GAAD,OAAYA,EAAMG,SAAW,OAAS,UAG7C,SAACH,GAAD,OACPA,EAAMG,SAAWH,EAAMC,MAAMC,QAAUF,EAAMC,MAAMG,aAC3C,SAACJ,GAAD,OAAYA,EAAMG,SAAW,UAAY,aAGxC,SAACH,GAAD,OAAYA,EAAMG,SAAW,IAAM,S,iHClB3C,IAAMG,EAAiB,WAAO,IAAD,EACYC,qBAAWC,KAAjDC,EAD0B,EAC1BA,eAAgBC,EADU,EACVA,kBAExB,OACE,kBAACC,EAAD,KACE,kBAACd,EAAD,CACEM,SAA6B,WAAnBM,EACVG,QAAS,kBAAMF,EAAkB,YAFnC,UAMA,kBAACb,EAAD,CACEM,SAA6B,YAAnBM,EACVG,QAAS,kBAAMF,EAAkB,aAFnC,aAUAC,EAA6Bb,IAAOC,IAAV,K,qPCrBzB,IAAMc,EAAY,WAAO,IAAD,EACuBN,qBAAWC,KAAvDM,EADqB,EACrBA,kBAAmBC,EADE,EACFA,qBAErBC,EAAc,SAACC,GACnB,IAAMC,EAAoBC,SAASC,cACjC,gBAEFF,EAAkBG,MAAMC,QAAU,MAClCP,EAAqBE,GACrBM,YAAW,WACTL,EAAkBG,MAAMC,QAAU,MACjC,MAGL,OACE,kBAACE,EAAD,KACE,kBAAC3B,EAAD,CACEM,SAAgC,UAAtBW,EACVF,QAAS,kBAAMI,EAAY,WAF7B,SAMA,kBAACnB,EAAD,CACEM,SAAgC,WAAtBW,EACVF,QAAS,kBAAMI,EAAY,YAF7B,UAMA,kBAACnB,EAAD,CACEM,SAAgC,SAAtBW,EACVF,QAAS,kBAAMI,EAAY,UAF7B,UAUAQ,EAAqB1B,IAAOC,IAAV,KAGb,SAACC,GAAD,OAAWA,EAAMC,MAAMC,W,4ICzC3B,IAAMuB,EAAc,kBACzB,kBAACC,EAAD,KACE,kBAAC,EAAD,MACA,kBAAC,EAAD,QAIEA,EAAuB5B,IAAOC,IAAV,K,qLCLnB,IAAM4B,EAAe,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,SAAoB,EACXC,mBAAS,GADE,mBAC1CC,EAD0C,KAC7BC,EAD6B,KAE3CC,EAAWC,iBAAO,MAClBC,EAAe3B,qBAAW4B,KA6BhC,OA3BAC,qBAAU,WACR,IAAKN,EAoBH,OAnBAC,EACEM,IAAM,CACJC,GAAIN,EAASO,QACbC,MAAOA,EACPC,gBAAiBP,EAAa7B,WAC9BqC,OAAQR,EAAa9B,UACrBuC,OAAQT,EAAa7B,WACrBuC,SAAU,GACVC,WAAY,EACZC,WAAY,GACZC,UAAW,EACXC,SAAU,OAIdzB,YAAW,WACT0B,OAAOC,cAAc,IAAIC,MAAM,aAC9B,KAEI,WACDrB,GAAaA,EAAYsB,aAGhC,CAAClB,EAAa7B,WAAY6B,EAAa9B,UAAW0B,IAE9C,kBAACuB,EAAD,CAAgBC,IAAKtB,GAAWJ,IAGnCyB,EAAiBvD,IAAOC,IAAV,KCpCdwD,EAAoBC,gBACxB,kBAAM,uDAEFC,EAAwBD,gBAC5B,kBAAM,uDAuBOE,UApBE,WAAO,IAAD,EAC2BnD,qBAAWC,KAAnDmD,EADa,EACbA,gBAAiBC,EADJ,EACIA,mBAKzB,OAJAxB,qBAAU,WACRwB,EAAoD,MAAjCC,YAAc,mBAChC,CAACD,IAGF,kBAAC,EAAD,KACGD,EACC,oCACE,kBAAC,EAAD,MACA,kBAACF,EAAD,OAGF,kBAACF,EAAD,S,gCC3BR,oEAAO,IAAMO,EAAgB,SAACC,EAAaC,EAAYC,GACrD,IAEMC,EAAO,CACXF,MAAOA,EACPG,QAJU,IAAIC,MAIFC,UAAyB,IAAbJ,GAG1BK,aAAaC,QAAQR,EAAKS,KAAKC,UAAUP,KAG9BL,EAAgB,SAACE,GAC5B,IAAMW,EAAcJ,aAAaK,QAAQZ,GACzC,IAAKW,EACH,OAAO,KAGT,IAAMR,EAAOM,KAAKI,MAAMF,GAGxB,OAFY,IAAIN,MAERC,UAAYH,EAAKC,QACvBG,aAAaO,WAAWd,GACjB,MAGFG,EAAKF","file":"static/js/8.01b1ea90.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const StyledToggle = styled.div<{ selected?: boolean }>`\n  color: ${(props) => props.theme.primary};\n  background: ${(props) =>\n    props.selected ? props.theme.secondary : props.theme.background};\n  border: 1px solid ${(props) => props.theme.secondary};\n  padding: 6px;\n  font-weight: 500;\n  cursor: pointer;\n  font-size: 16px;\n  -moz-transition: all 0.2s ease-in;\n  -o-transition: all 0.2s ease-in;\n  -webkit-transition: all 0.2s ease-in;\n  transition: all 0.2s ease-in;\n  pointer-events: ${(props) => (props.selected ? \"none\" : \"auto\")};\n\n  &:hover {\n    color: ${(props) =>\n      props.selected ? props.theme.primary : props.theme.secondary};\n    cursor: ${(props) => (props.selected ? \"default\" : \"pointer\")};\n  }\n  &:active {\n    opacity: ${(props) => (props.selected ? \"1\" : \"0.6\")};\n  }\n`;\n","import React, { useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { AppContext } from \"../../AppContext\";\nimport { StyledToggle } from \"../toggle-button/styled-toggle\";\n\nexport const FavouritesType = () => {\n  const { favouritesType, setFavouritesType } = useContext(AppContext);\n\n  return (\n    <FavouritesOptionsContainer>\n      <StyledToggle\n        selected={favouritesType === \"tracks\"}\n        onClick={() => setFavouritesType(\"tracks\")}\n      >\n        Tracks\n      </StyledToggle>\n      <StyledToggle\n        selected={favouritesType === \"artists\"}\n        onClick={() => setFavouritesType(\"artists\")}\n      >\n        Artists\n      </StyledToggle>\n    </FavouritesOptionsContainer>\n  );\n};\n\nconst FavouritesOptionsContainer = styled.div`\n  display: flex;\n  align-items: center;\n`;\n","import React, { useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { AppContext } from \"../../AppContext\";\nimport { StyledToggle } from \"../toggle-button/styled-toggle\";\n\nexport const TimeRange = () => {\n  const { selectedTimeRange, setSelectedTimeRange } = useContext(AppContext);\n\n  const handleClick = (timeRange: string) => {\n    const spotifyTopElement = document.querySelector(\n      \".spotify-top\"\n    ) as HTMLDivElement;\n    spotifyTopElement.style.opacity = \"0.2\";\n    setSelectedTimeRange(timeRange);\n    setTimeout(() => {\n      spotifyTopElement.style.opacity = \"1\";\n    }, 500);\n  };\n\n  return (\n    <TimeRangeContainer>\n      <StyledToggle\n        selected={selectedTimeRange === \"short\"}\n        onClick={() => handleClick(\"short\")}\n      >\n        Short\n      </StyledToggle>\n      <StyledToggle\n        selected={selectedTimeRange === \"medium\"}\n        onClick={() => handleClick(\"medium\")}\n      >\n        Medium\n      </StyledToggle>\n      <StyledToggle\n        selected={selectedTimeRange === \"long\"}\n        onClick={() => handleClick(\"long\")}\n      >\n        Long\n      </StyledToggle>\n    </TimeRangeContainer>\n  );\n};\n\nconst TimeRangeContainer = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  color: ${(props) => props.theme.primary};\n\n  @media only screen and (max-width: 768px) {\n    flex-direction: column;\n    align-items: flex-end;\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { FavouritesType } from \"./favourites-options\";\nimport { TimeRange } from \"./time-range\";\n\nexport const TopControls = () => (\n  <TopControlsContainer>\n    <FavouritesType />\n    <TimeRange />\n  </TopControlsContainer>\n);\n\nconst TopControlsContainer = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n`;\n","import React, { useContext, useEffect, useRef, useState } from \"react\";\nimport styled, { ThemeContext } from \"styled-components\";\n\nimport * as THREE from \"three\";\n// @ts-ignore\nimport BIRDS from \"vanta/dist/vanta.birds.min\";\n\nexport const VantaWrapper = ({ children }: any) => {\n  const [vantaEffect, setVantaEffect] = useState(0 as any);\n  const vantaRef = useRef(null);\n  const themeContext = useContext(ThemeContext);\n\n  useEffect(() => {\n    if (!vantaEffect) {\n      setVantaEffect(\n        BIRDS({\n          el: vantaRef.current,\n          THREE: THREE,\n          backgroundColor: themeContext.background,\n          color1: themeContext.secondary,\n          color2: themeContext.background,\n          wingSpan: 40.0,\n          speedLimit: 6.0,\n          separation: 60.0,\n          alignment: 5.0,\n          quantity: 1.5,\n        })\n      );\n\n      setTimeout(() => {\n        window.dispatchEvent(new Event(\"resize\"));\n      }, 200);\n\n      return () => {\n        if (vantaEffect) vantaEffect.destroy();\n      };\n    }\n  }, [themeContext.background, themeContext.secondary, vantaEffect]);\n\n  return <VantaContainer ref={vantaRef}>{children}</VantaContainer>;\n};\n\nconst VantaContainer = styled.div`\n  canvas {\n    z-index: -1 !important;\n    max-height: 30%;\n  }\n`;\n","import React, { lazy, useContext, useEffect } from \"react\";\nimport { AppContext } from \"../AppContext\";\nimport { TopControls } from \"../components/top-controls/top-controls\";\nimport { getWithExpiry } from \"../util/storage-util\";\nimport { VantaWrapper } from \"../components/vanta/vanta\";\n\nconst SpotifySignInLazy = lazy(\n  () => import(\"../components/spotify-sign-in/spotify-sign-in\")\n);\nconst SpotifyTopArtistsLazy = lazy(\n  () => import(\"../components/spotify-top/spotify-top-artists\")\n);\n\nconst HomePage = () => {\n  const { hasSpotifyToken, setHasSpotifyToken } = useContext(AppContext);\n  useEffect(() => {\n    setHasSpotifyToken(getWithExpiry(\"spotifyToken\") != null);\n  }, [setHasSpotifyToken]);\n\n  return (\n    <VantaWrapper>\n      {hasSpotifyToken ? (\n        <>\n          <TopControls />\n          <SpotifyTopArtistsLazy />\n        </>\n      ) : (\n        <SpotifySignInLazy />\n      )}\n    </VantaWrapper>\n  );\n};\n\nexport default HomePage;\n","export const setWithExpiry = (key: string, value: any, ttlSeconds: number) => {\n  const now = new Date();\n\n  const item = {\n    value: value,\n    expiry: now.getTime() + ttlSeconds * 1000,\n  };\n\n  localStorage.setItem(key, JSON.stringify(item));\n};\n\nexport const getWithExpiry = (key: string) => {\n  const itemStorage = localStorage.getItem(key);\n  if (!itemStorage) {\n    return null;\n  }\n\n  const item = JSON.parse(itemStorage);\n  const now = new Date();\n\n  if (now.getTime() > item.expiry) {\n    localStorage.removeItem(key);\n    return null;\n  }\n\n  return item.value;\n};\n"],"sourceRoot":""}