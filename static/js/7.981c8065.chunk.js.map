{"version":3,"sources":["components/top-controls/favourites-type/favourites-type.tsx","components/top-controls/time-range/time-range.tsx","components/top-controls/top-controls.tsx","pages/home.tsx","util/storage-util.ts"],"names":["FavouritesType","TimeRange","useContext","AppContext","selectedTimeRange","setSelectedTimeRange","handleClick","timeRange","spotifyTopElement","document","querySelector","style","opacity","setTimeout","className","onClick","TopControls","SpotifySignInLazy","lazy","SpotifyTopArtistsLazy","HomePage","hasSpotifyToken","setHasSpotifyToken","useEffect","getWithExpiry","setWithExpiry","key","value","ttlSeconds","item","expiry","Date","getTime","localStorage","setItem","JSON","stringify","itemStorage","getItem","parse","removeItem"],"mappings":"+MAIaA,EAAiB,kBAAM,sCCAvBC,G,OAAY,WAAO,IAAD,EACuBC,qBAAWC,KAAvDC,EADqB,EACrBA,kBAAmBC,EADE,EACFA,qBAErBC,EAAc,SAACC,GACnB,IAAMC,EAAoBC,SAASC,cACjC,gBAEFF,EAAkBG,MAAMC,QAAU,MAClCP,EAAqBE,GACrBM,YAAW,WACTL,EAAkBG,MAAMC,QAAU,MACjC,MAGL,OACE,yBAAKE,UAAU,cACb,yBACEC,QAAS,kBAAMT,EAAY,UAC3BQ,UAAS,2BACe,UAAtBV,EAAgC,6BAA+B,KAHnE,SAQA,yBACEW,QAAS,kBAAMT,EAAY,WAC3BQ,UAAS,2BACe,WAAtBV,EAAiC,6BAA+B,KAHpE,UAQA,yBACEW,QAAS,kBAAMT,EAAY,SAC3BQ,UAAS,2BACe,SAAtBV,EAA+B,6BAA+B,KAHlE,WC/BOY,G,OAAc,kBACzB,yBAAKF,UAAU,gBACb,kBAAC,EAAD,MACA,kBAAC,EAAD,S,QCHEG,EAAoBC,gBACxB,kBAAM,uDAEFC,EAAwBD,gBAC5B,kBAAM,uDAwBOE,UArBE,WAAO,IAAD,EAC2BlB,qBAAWC,KAAnDkB,EADa,EACbA,gBAAiBC,EADJ,EACIA,mBAMzB,OAJAC,qBAAU,WACRD,EAAoD,MAAjCE,YAAc,mBAChC,CAACF,IAGF,oCACGD,EACC,oCACE,kBAAC,EAAD,MACA,kBAACF,EAAD,OAGF,kBAACF,EAAD,S,gCC3BR,oEAAO,IAAMQ,EAAgB,SAACC,EAAaC,EAAYC,GACrD,IAEMC,EAAO,CACXF,MAAOA,EACPG,QAJU,IAAIC,MAIFC,UAAyB,IAAbJ,GAG1BK,aAAaC,QAAQR,EAAKS,KAAKC,UAAUP,KAG9BL,EAAgB,SAACE,GAC5B,IAAMW,EAAcJ,aAAaK,QAAQZ,GACzC,IAAKW,EACH,OAAO,KAGT,IAAMR,EAAOM,KAAKI,MAAMF,GAGxB,OAFY,IAAIN,MAERC,UAAYH,EAAKC,QACvBG,aAAaO,WAAWd,GACjB,MAGFG,EAAKF","file":"static/js/7.981c8065.chunk.js","sourcesContent":["import React from \"react\";\n\n//TODO Styled buttons for Artists/Tracks\n\nexport const FavouritesType = () => <div>Test</div>;\n","import React, { useContext } from \"react\";\nimport { AppContext } from \"../../../AppContext\";\nimport \"./time-range.scss\";\n\nexport const TimeRange = () => {\n  const { selectedTimeRange, setSelectedTimeRange } = useContext(AppContext);\n\n  const handleClick = (timeRange: string) => {\n    const spotifyTopElement = document.querySelector(\n      \".spotify-top\"\n    ) as HTMLDivElement;\n    spotifyTopElement.style.opacity = \"0.2\";\n    setSelectedTimeRange(timeRange);\n    setTimeout(() => {\n      spotifyTopElement.style.opacity = \"1\";\n    }, 500);\n  };\n\n  return (\n    <div className=\"time-range\">\n      <div\n        onClick={() => handleClick(\"short\")}\n        className={`time-range__item ${\n          selectedTimeRange === \"short\" ? \"time-range__item--selected\" : \"\"\n        }`}\n      >\n        Short\n      </div>\n      <div\n        onClick={() => handleClick(\"medium\")}\n        className={`time-range__item ${\n          selectedTimeRange === \"medium\" ? \"time-range__item--selected\" : \"\"\n        }`}\n      >\n        Medium\n      </div>\n      <div\n        onClick={() => handleClick(\"long\")}\n        className={`time-range__item ${\n          selectedTimeRange === \"long\" ? \"time-range__item--selected\" : \"\"\n        }`}\n      >\n        Long\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { FavouritesType } from \"./favourites-type/favourites-type\";\nimport { TimeRange } from \"./time-range/time-range\";\nimport \"./top-controls.scss\";\n\nexport const TopControls = () => (\n  <div className=\"top-controls\">\n    <FavouritesType />\n    <TimeRange />\n  </div>\n);\n","import React, { lazy, useContext, useEffect } from \"react\";\nimport { AppContext } from \"../AppContext\";\nimport { TopControls } from \"../components/top-controls/top-controls\";\nimport { getWithExpiry } from \"../util/storage-util\";\n\nconst SpotifySignInLazy = lazy(\n  () => import(\"../components/spotify-sign-in/spotify-sign-in\")\n);\nconst SpotifyTopArtistsLazy = lazy(\n  () => import(\"../components/spotify-top/spotify-top-artists\")\n);\n\nconst HomePage = () => {\n  const { hasSpotifyToken, setHasSpotifyToken } = useContext(AppContext);\n\n  useEffect(() => {\n    setHasSpotifyToken(getWithExpiry(\"spotifyToken\") != null);\n  }, [setHasSpotifyToken]);\n\n  return (\n    <>\n      {hasSpotifyToken ? (\n        <>\n          <TopControls />\n          <SpotifyTopArtistsLazy />\n        </>\n      ) : (\n        <SpotifySignInLazy />\n      )}\n    </>\n  );\n};\n\nexport default HomePage;\n","export const setWithExpiry = (key: string, value: any, ttlSeconds: number) => {\n  const now = new Date();\n\n  const item = {\n    value: value,\n    expiry: now.getTime() + ttlSeconds * 1000,\n  };\n\n  localStorage.setItem(key, JSON.stringify(item));\n};\n\nexport const getWithExpiry = (key: string) => {\n  const itemStorage = localStorage.getItem(key);\n  if (!itemStorage) {\n    return null;\n  }\n\n  const item = JSON.parse(itemStorage);\n  const now = new Date();\n\n  if (now.getTime() > item.expiry) {\n    localStorage.removeItem(key);\n    return null;\n  }\n\n  return item.value;\n};\n"],"sourceRoot":""}