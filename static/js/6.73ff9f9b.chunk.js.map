{"version":3,"sources":["services/spotify-service.ts","components/spotify-top/spotify-top-artists.tsx","services/spotify-auth.ts"],"names":["getUserTopArtists","timeRange","limit","a","spotifyToken","checkSpotifyTokenAndRefresh","console","log","fetch","method","headers","Authorization","userTopArtistsResults","json","Promise","reject","ArtistSelector","artist","selected","setSelectedArtist","setCurrentElementPos","currentElementPos","onClick","e","event","selectedElement","currentTarget","style","opacity","newPosition","offsetLeft","parentElement","scrollTo","top","left","behavior","scrollToElement","className","alt","src","images","url","name","SelectedArtist","popularity","genres","length","map","genre","index","key","SpotifyTopArtists","useState","artists","setArtists","selectedArtist","scrollSelector","selectorElement","document","querySelector","scrollAmount","offsetWidth","scrollBy","useEffect","then","result","items","GrantType","cryptoRandomString","require","sha256","Base64","CLIENT_ID","spotifyAuthRequestUri","verifierCode","type","localStorage","setItem","base64URLEncode","challengeCode","stateCode","token","getWithExpiry","getUserAccessToken","REFRESH","getItem","grantType","stateResponse","authCode","spotifyRefreshTokenRequest","grant_type","refresh_token","client_id","fetchTokenFromSpotify","spotifyTokenRequest","code","redirect_uri","code_verifier","body","encodeFormData","spotifyTokens","tokens","access_token","setWithExpiry","expires_in","hash","toString","replace","data","Object","keys","encodeURIComponent","join"],"mappings":"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","file":"static/js/6.73ff9f9b.chunk.js","sourcesContent":["import { checkSpotifyTokenAndRefresh } from \"./spotify-auth\";\r\nimport { Artist, Track } from \"./spotify-types\";\r\n\r\nconst SPOTIFY_API_URL = \"https://api.spotify.com/v1\";\r\n\r\nexport const getUserTopArtists = async (\r\n  timeRange: string,\r\n  limit?: number\r\n): Promise<UserTopArtists> => {\r\n  const spotifyToken = checkSpotifyTokenAndRefresh();\r\n  if (spotifyToken) {\r\n    console.log(\r\n      `GET: ${SPOTIFY_API_URL}/me/top/artists?time_range=${timeRange}&limit=${limit}`\r\n    );\r\n    const userTopArtistsResults = await fetch(\r\n      `${SPOTIFY_API_URL}/me/top/artists?time_range=${timeRange}${\r\n        limit ? `&limit=${limit}` : \"\"\r\n      }`,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          Authorization: `Bearer ${spotifyToken}`,\r\n        },\r\n      }\r\n    );\r\n\r\n    return userTopArtistsResults.json();\r\n  }\r\n\r\n  return Promise.reject(\"Invalid spotify auth token :(\");\r\n};\r\n\r\ninterface UserTopArtists {\r\n  items: Array<Artist>;\r\n}\r\n\r\ninterface UserTopTracks {\r\n  items: Array<Track>;\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { getUserTopArtists } from \"../../services/spotify-service\";\r\nimport { Artist } from \"../../services/spotify-types\";\r\nimport \"./spotify-top.scss\";\r\n\r\ninterface SpotifyTopArtistsProps {\r\n  timeRange: string;\r\n}\r\n\r\nconst SpotifyTopArtists = ({ timeRange }: SpotifyTopArtistsProps) => {\r\n  const [artists, setArtists] = useState([] as Array<Artist>);\r\n  const [selectedArtist, setSelectedArtist] = useState({} as Artist);\r\n  const [currentElementPos, setCurrentElementPos] = useState(0);\r\n\r\n  const scrollSelector = (left: boolean) => {\r\n    const selectorElement = document.querySelector(\r\n      \".spotify-top__selector\"\r\n    ) as HTMLDivElement;\r\n    const scrollAmount = selectorElement.offsetWidth * (1 - 0.05);\r\n    selectorElement.scrollBy({\r\n      top: 0,\r\n      left: left ? -scrollAmount : scrollAmount,\r\n      behavior: \"smooth\",\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getUserTopArtists(`${timeRange}_term`).then((result) => {\r\n      setArtists(result.items);\r\n      setSelectedArtist(result.items && result.items[0]);\r\n      //TODO Scroll to start of selector\r\n    });\r\n\r\n    /* const artists = getDummyArtists(); */\r\n    /*     setArtists(artists);\r\n    setSelectedArtist(artists[0]); */\r\n  }, [timeRange]);\r\n\r\n  return (\r\n    <div className=\"spotify-top fade-in\">\r\n      <div className=\"spotify-top__title\">Your top artists</div>\r\n      <div className=\"spotify-top__scroll-buttons\"></div>\r\n      <div className=\"spotify-top__selector-container\">\r\n        <div\r\n          className=\"spotify-top__selector-container__scroll\"\r\n          onClick={() => scrollSelector(true)}\r\n        >\r\n          {\"<\"}\r\n        </div>\r\n        <div className=\"spotify-top__selector fade-in\">\r\n          {artists &&\r\n            artists.map((artist, index) => (\r\n              <ArtistSelector\r\n                artist={artist}\r\n                selected={artist === selectedArtist}\r\n                setSelectedArtist={setSelectedArtist}\r\n                setCurrentElementPos={setCurrentElementPos}\r\n                currentElementPos={currentElementPos}\r\n                key={index}\r\n              />\r\n            ))}\r\n        </div>\r\n        <div\r\n          className=\"spotify-top__selector-container__scroll\"\r\n          onClick={() => scrollSelector(false)}\r\n        >\r\n          {\">\"}\r\n        </div>\r\n      </div>\r\n\r\n      {selectedArtist && <SelectedArtist artist={selectedArtist} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ArtistSelector = ({\r\n  artist,\r\n  selected,\r\n  setSelectedArtist,\r\n  setCurrentElementPos,\r\n  currentElementPos,\r\n}: {\r\n  artist: Artist;\r\n  selected: boolean;\r\n  setSelectedArtist: Function;\r\n  setCurrentElementPos: Function;\r\n  currentElementPos: number;\r\n}) => {\r\n  const scrollToElement = (event: any) => {\r\n    //TODO Remove this function..\r\n    const scrollOffset = 300;\r\n    const selectedElement = event.currentTarget;\r\n    selectedElement.style.opacity = selectedElement.style.opacity === \"0\" ? \"1\" : \"0\";\r\n    const selectedElementPos = selectedElement.offsetLeft;\r\n    const newPosition =\r\n      selectedElementPos > currentElementPos\r\n        ? currentElementPos + scrollOffset\r\n        : currentElementPos - scrollOffset;\r\n\r\n    selectedElement.parentElement.scrollTo({\r\n      top: 0,\r\n      left: newPosition,\r\n      behavior: \"smooth\",\r\n    });\r\n\r\n    setCurrentElementPos(newPosition);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      onClick={(e) => {\r\n        setSelectedArtist(artist);\r\n        scrollToElement(e);\r\n      }}\r\n      className={`spotify-top__selector__item fade-in ${\r\n        selected ? \"spotify-top__selector__item--selected\" : \"\"\r\n      }`}\r\n    >\r\n      <img alt=\"artist\" src={artist.images[0].url} />\r\n      <div className=\"spotify-top__selector__item__name\">{artist.name}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst SelectedArtist = ({ artist }: { artist: Artist }) => {\r\n  return (\r\n    <div className=\"spotify-top__selected\">\r\n      <div className=\"spotify-top__selected__title\">\r\n        <div className=\"spotify-top__selected__title__name\">{artist.name} </div>\r\n        <div className=\"spotify-top__selected__title__popularity\">\r\n          <div>{artist.popularity}</div>\r\n        </div>\r\n      </div>\r\n      <div className=\"spotify-top__selected__details\">\r\n        {artist.genres && artist.genres.length > 0 && (\r\n          <>\r\n            <div className=\"spotify-top__selected__genres\">\r\n              <div className=\"spotify-top__selected__genres__title\">Genres</div>\r\n              {artist.genres.map((genre, index) => (\r\n                <span key={index}> {genre} </span>\r\n              ))}\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst getDummyArtists = () => {\r\n  return [\r\n    {\r\n      external_urls: {\r\n        spotify: \"https://open.spotify.com/artist/3TVXtAsR1Inumwj472S9r4\",\r\n      },\r\n      followers: { href: null, total: 50098920 },\r\n      genres: [\r\n        \"canadian hip hop\",\r\n        \"canadian pop\",\r\n        \"hip hop\",\r\n        \"pop rap\",\r\n        \"rap\",\r\n        \"toronto rap\",\r\n      ],\r\n      href: \"https://api.spotify.com/v1/artists/3TVXtAsR1Inumwj472S9r4\",\r\n      id: \"3TVXtAsR1Inumwj472S9r4\",\r\n      images: [\r\n        {\r\n          height: 640,\r\n          url:\r\n            \"https://i.scdn.co/image/60cfab40c6bb160a1906be45276829d430058005\",\r\n          width: 640,\r\n        },\r\n        {\r\n          height: 320,\r\n          url:\r\n            \"https://i.scdn.co/image/5ea794cf832550943d5f8122afcf5f23ee9d85b7\",\r\n          width: 320,\r\n        },\r\n        {\r\n          height: 160,\r\n          url:\r\n            \"https://i.scdn.co/image/8eaace74aaca82eaccde400bbcab2653b9cf86e1\",\r\n          width: 160,\r\n        },\r\n      ],\r\n      name: \"Drake\",\r\n      popularity: 100,\r\n      type: \"artist\",\r\n      uri: \"spotify:artist:3TVXtAsR1Inumwj472S9r4\",\r\n    },\r\n    {\r\n      external_urls: {\r\n        spotify: \"https://open.spotify.com/artist/7wg1qvie3KqDNQbAkTdbX0\",\r\n      },\r\n      followers: { href: null, total: 380956 },\r\n      genres: [\"edm\", \"electropop\", \"pop\", \"tropical house\"],\r\n      href: \"https://api.spotify.com/v1/artists/7wg1qvie3KqDNQbAkTdbX0\",\r\n      id: \"7wg1qvie3KqDNQbAkTdbX0\",\r\n      images: [\r\n        {\r\n          height: 640,\r\n          url:\r\n            \"https://i.scdn.co/image/d4dead698f1d50ac7321385d76fb431d4c3e99c2\",\r\n          width: 640,\r\n        },\r\n        {\r\n          height: 320,\r\n          url:\r\n            \"https://i.scdn.co/image/4f869af238a8356ed4b65c69670f7cd8649a6251\",\r\n          width: 320,\r\n        },\r\n        {\r\n          height: 160,\r\n          url:\r\n            \"https://i.scdn.co/image/84e8595d5d8c217467cc0b9578a45cb1cd2fbe8f\",\r\n          width: 160,\r\n        },\r\n      ],\r\n      name: \"Louis The Child\",\r\n      popularity: 74,\r\n      type: \"artist\",\r\n      uri: \"spotify:artist:7wg1qvie3KqDNQbAkTdbX0\",\r\n    },\r\n    {\r\n      external_urls: {\r\n        spotify: \"https://open.spotify.com/artist/3TVXtAsR1Inumwj472S9r4\",\r\n      },\r\n      followers: { href: null, total: 50098920 },\r\n      genres: [\r\n        \"canadian hip hop\",\r\n        \"canadian pop\",\r\n        \"hip hop\",\r\n        \"pop rap\",\r\n        \"rap\",\r\n        \"toronto rap\",\r\n      ],\r\n      href: \"https://api.spotify.com/v1/artists/3TVXtAsR1Inumwj472S9r4\",\r\n      id: \"3TVXtAsR1Inumwj472S9r4\",\r\n      images: [\r\n        {\r\n          height: 640,\r\n          url:\r\n            \"https://i.scdn.co/image/60cfab40c6bb160a1906be45276829d430058005\",\r\n          width: 640,\r\n        },\r\n        {\r\n          height: 320,\r\n          url:\r\n            \"https://i.scdn.co/image/5ea794cf832550943d5f8122afcf5f23ee9d85b7\",\r\n          width: 320,\r\n        },\r\n        {\r\n          height: 160,\r\n          url:\r\n            \"https://i.scdn.co/image/8eaace74aaca82eaccde400bbcab2653b9cf86e1\",\r\n          width: 160,\r\n        },\r\n      ],\r\n      name: \"Drake2\",\r\n      popularity: 100,\r\n      type: \"artist\",\r\n      uri: \"spotify:artist:3TVXtAsR1Inumwj472S9r4\",\r\n    },\r\n    {\r\n      external_urls: {\r\n        spotify: \"https://open.spotify.com/artist/7wg1qvie3KqDNQbAkTdbX0\",\r\n      },\r\n      followers: { href: null, total: 380956 },\r\n      genres: [\"edm\", \"electropop\", \"pop\", \"tropical house\"],\r\n      href: \"https://api.spotify.com/v1/artists/7wg1qvie3KqDNQbAkTdbX0\",\r\n      id: \"7wg1qvie3KqDNQbAkTdbX0\",\r\n      images: [\r\n        {\r\n          height: 640,\r\n          url:\r\n            \"https://i.scdn.co/image/d4dead698f1d50ac7321385d76fb431d4c3e99c2\",\r\n          width: 640,\r\n        },\r\n        {\r\n          height: 320,\r\n          url:\r\n            \"https://i.scdn.co/image/4f869af238a8356ed4b65c69670f7cd8649a6251\",\r\n          width: 320,\r\n        },\r\n        {\r\n          height: 160,\r\n          url:\r\n            \"https://i.scdn.co/image/84e8595d5d8c217467cc0b9578a45cb1cd2fbe8f\",\r\n          width: 160,\r\n        },\r\n      ],\r\n      name: \"Louis The Child2\",\r\n      popularity: 74,\r\n      type: \"artist\",\r\n      uri: \"spotify:artist:7wg1qvie3KqDNQbAkTdbX0\",\r\n    },\r\n    {\r\n      external_urls: {\r\n        spotify: \"https://open.spotify.com/artist/3TVXtAsR1Inumwj472S9r4\",\r\n      },\r\n      followers: { href: null, total: 50098920 },\r\n      genres: [\r\n        \"canadian hip hop\",\r\n        \"canadian pop\",\r\n        \"hip hop\",\r\n        \"pop rap\",\r\n        \"rap\",\r\n        \"toronto rap\",\r\n      ],\r\n      href: \"https://api.spotify.com/v1/artists/3TVXtAsR1Inumwj472S9r4\",\r\n      id: \"3TVXtAsR1Inumwj472S9r4\",\r\n      images: [\r\n        {\r\n          height: 640,\r\n          url:\r\n            \"https://i.scdn.co/image/60cfab40c6bb160a1906be45276829d430058005\",\r\n          width: 640,\r\n        },\r\n        {\r\n          height: 320,\r\n          url:\r\n            \"https://i.scdn.co/image/5ea794cf832550943d5f8122afcf5f23ee9d85b7\",\r\n          width: 320,\r\n        },\r\n        {\r\n          height: 160,\r\n          url:\r\n            \"https://i.scdn.co/image/8eaace74aaca82eaccde400bbcab2653b9cf86e1\",\r\n          width: 160,\r\n        },\r\n      ],\r\n      name: \"Drake3\",\r\n      popularity: 100,\r\n      type: \"artist\",\r\n      uri: \"spotify:artist:3TVXtAsR1Inumwj472S9r4\",\r\n    },\r\n  ];\r\n};\r\n\r\nexport default SpotifyTopArtists;\r\n","import { getWithExpiry, setWithExpiry } from \"../util/storage-util\";\r\n\r\nconst cryptoRandomString = require(\"crypto-random-string\");\r\nconst sha256 = require(\"crypto-js/sha256\");\r\nconst Base64 = require(\"crypto-js/enc-base64\");\r\n\r\n//env variables?\r\nconst CLIENT_ID = \"a3c9a895bbe94102a08574ba4f4adc9e\";\r\nconst REDIRECT_URI = \"http://localhost:3000/callback\";\r\nconst SCOPES =\r\n  \"user-top-read,streaming,user-read-recently-played,user-read-playback-state,user-library-read,user-read-currently-playing,user-modify-playback-state\";\r\n\r\nexport enum GrantType {\r\n  AUTH = \"authorization_code\",\r\n  REFRESH = \"refresh_token\",\r\n}\r\n\r\nexport const spotifyAuthRequestUri = async () => {\r\n  const verifierCode = cryptoRandomString({ length: 48, type: \"url-safe\" });\r\n  localStorage.setItem(\"verifierCode\", verifierCode);\r\n\r\n  const challengeCode = base64URLEncode(await sha256(verifierCode));\r\n\r\n  const stateCode = cryptoRandomString({ length: 10, type: \"url-safe\" });\r\n  localStorage.setItem(\"stateCode\", stateCode);\r\n\r\n  return `https://accounts.spotify.com/authorize?response_type=code&client_id=${CLIENT_ID}&redirect_uri=${REDIRECT_URI}&code_challenge_method=S256&code_challenge=${challengeCode}&state=${stateCode}&scope=${SCOPES}`;\r\n};\r\n\r\nexport const checkSpotifyTokenAndRefresh = () => {\r\n  const token = getWithExpiry(\"spotifyToken\");\r\n\r\n  if (token) {\r\n    return token;\r\n  } else if (getUserAccessToken(GrantType.REFRESH)) {\r\n    return localStorage.getItem(\"spotifyRefreshToken\");\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nexport const getUserAccessToken = async (\r\n  grantType: GrantType,\r\n  stateResponse?: string,\r\n  authCode?: string\r\n): Promise<boolean> => {\r\n  if (grantType === GrantType.REFRESH) {\r\n    const spotifyRefreshTokenRequest = {\r\n      grant_type: grantType,\r\n      refresh_token: localStorage.getItem(\"spotifyRefreshToken\"),\r\n      client_id: CLIENT_ID,\r\n    };\r\n\r\n    return fetchTokenFromSpotify(spotifyRefreshTokenRequest);\r\n  } else if (localStorage.getItem(\"stateCode\") === stateResponse) {\r\n    const spotifyTokenRequest = {\r\n      client_id: CLIENT_ID,\r\n      grant_type: grantType,\r\n      code: authCode,\r\n      redirect_uri: REDIRECT_URI,\r\n      code_verifier: localStorage.getItem(\"verifierCode\"),\r\n    };\r\n\r\n    return await fetchTokenFromSpotify(spotifyTokenRequest);\r\n  }\r\n\r\n  return false;\r\n};\r\n\r\nconst fetchTokenFromSpotify = async (spotifyTokenRequest: {}): Promise<\r\n  boolean\r\n> => {\r\n  const spotifyTokens = await fetch(\"https://accounts.spotify.com/api/token\", {\r\n    method: \"POST\",\r\n    body: encodeFormData(spotifyTokenRequest),\r\n    headers: {\r\n      \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n    },\r\n  });\r\n\r\n  const tokens = await spotifyTokens.json();\r\n  if (tokens.access_token) {\r\n    setWithExpiry(\"spotifyToken\", tokens.access_token, tokens.expires_in);\r\n    localStorage.setItem(\"spotifyRefreshToken\", tokens.refresh_token);\r\n    return true;\r\n  }\r\n\r\n  return false;\r\n};\r\n\r\nconst base64URLEncode = (hash: any): string => {\r\n  return hash\r\n    .toString(Base64)\r\n    .replace(/=/g, \"\")\r\n    .replace(/\\+/g, \"-\")\r\n    .replace(/\\//g, \"_\");\r\n};\r\n\r\nconst encodeFormData = (data: any) => {\r\n  return Object.keys(data)\r\n    .map((key) => encodeURIComponent(key) + \"=\" + encodeURIComponent(data[key]))\r\n    .join(\"&\");\r\n};\r\ninterface UserToken {\r\n  access_token: string;\r\n  refresh_token: string;\r\n  expires_in: number;\r\n}\r\n"],"sourceRoot":""}