{"version":3,"sources":["components/toggle-button/styled-toggle.tsx","components/top-controls/favourites-options.tsx","components/top-controls/time-range.tsx","components/top-controls/top-controls.tsx","pages/home.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js","util/storage-util.ts"],"names":["StyledToggle","styled","div","props","theme","primary","selected","secondary","background","FavouritesType","useContext","AppContext","favouritesType","setFavouritesType","FavouritesOptionsContainer","onClick","TimeRange","selectedTimeRange","setSelectedTimeRange","handleClick","timeRange","spotifyTopElement","document","querySelector","style","opacity","setTimeout","TimeRangeContainer","TopControls","TopControlsContainer","SpotifySignInLazy","lazy","SpotifyTopArtistsLazy","HomePage","hasSpotifyToken","setHasSpotifyToken","useEffect","getWithExpiry","_taggedTemplateLiteral","strings","raw","slice","Object","freeze","defineProperties","value","setWithExpiry","key","ttlSeconds","item","expiry","Date","getTime","localStorage","setItem","JSON","stringify","itemStorage","getItem","parse","removeItem"],"mappings":"8oBAEO,IAAMA,EAAeC,IAAOC,IAAV,KACd,SAACC,GAAD,OAAWA,EAAMC,MAAMC,WAClB,SAACF,GAAD,OACZA,EAAMG,SAAWH,EAAMC,MAAMG,UAAYJ,EAAMC,MAAMI,cACnC,SAACL,GAAD,OAAWA,EAAMC,MAAMG,aASzB,SAACJ,GAAD,OAAYA,EAAMG,SAAW,OAAS,UAG7C,SAACH,GAAD,OACPA,EAAMG,SAAWH,EAAMC,MAAMC,QAAUF,EAAMC,MAAMG,aAC3C,SAACJ,GAAD,OAAYA,EAAMG,SAAW,UAAY,aAGxC,SAACH,GAAD,OAAYA,EAAMG,SAAW,IAAM,S,iHClB3C,IAAMG,EAAiB,WAAO,IAAD,EACYC,qBAAWC,KAAjDC,EAD0B,EAC1BA,eAAgBC,EADU,EACVA,kBAExB,OACE,kBAACC,EAAD,KACE,kBAACd,EAAD,CACEM,SAA6B,WAAnBM,EACVG,QAAS,kBAAMF,EAAkB,YAFnC,UAMA,kBAACb,EAAD,CACEM,SAA6B,YAAnBM,EACVG,QAAS,kBAAMF,EAAkB,aAFnC,aAUAC,EAA6Bb,IAAOC,IAAV,K,qPCrBzB,IAAMc,EAAY,WAAO,IAAD,EACuBN,qBAAWC,KAAvDM,EADqB,EACrBA,kBAAmBC,EADE,EACFA,qBAErBC,EAAc,SAACC,GACnB,IAAMC,EAAoBC,SAASC,cACjC,gBAEFF,EAAkBG,MAAMC,QAAU,MAClCP,EAAqBE,GACrBM,YAAW,WACTL,EAAkBG,MAAMC,QAAU,MACjC,MAGL,OACE,kBAACE,EAAD,KACE,kBAAC3B,EAAD,CACEM,SAAgC,UAAtBW,EACVF,QAAS,kBAAMI,EAAY,WAF7B,SAMA,kBAACnB,EAAD,CACEM,SAAgC,WAAtBW,EACVF,QAAS,kBAAMI,EAAY,YAF7B,UAMA,kBAACnB,EAAD,CACEM,SAAgC,SAAtBW,EACVF,QAAS,kBAAMI,EAAY,UAF7B,UAUAQ,EAAqB1B,IAAOC,IAAV,KAGb,SAACC,GAAD,OAAWA,EAAMC,MAAMC,W,4ICzC3B,IAAMuB,EAAc,kBACzB,kBAACC,EAAD,KACE,kBAAC,EAAD,MACA,kBAAC,EAAD,QAIEA,EAAuB5B,IAAOC,IAAV,K,QCPpB4B,EAAoBC,gBACxB,kBAAM,uDAEFC,EAAwBD,gBAC5B,kBAAM,uDAwBOE,UArBE,WAAO,IAAD,EAC2BvB,qBAAWC,KAAnDuB,EADa,EACbA,gBAAiBC,EADJ,EACIA,mBAMzB,OAJAC,qBAAU,WACRD,EAAoD,MAAjCE,YAAc,mBAChC,CAACF,IAGF,oCACGD,EACC,oCACE,kBAAC,EAAD,MACA,kBAACF,EAAD,OAGF,kBAACF,EAAD,S,gCC3BO,SAASQ,EAAuBC,EAASC,GAKtD,OAJKA,IACHA,EAAMD,EAAQE,MAAM,IAGfC,OAAOC,OAAOD,OAAOE,iBAAiBL,EAAS,CACpDC,IAAK,CACHK,MAAOH,OAAOC,OAAOH,OAP3B,mC,gCCAA,oEAAO,IAAMM,EAAgB,SAACC,EAAaF,EAAYG,GACrD,IAEMC,EAAO,CACXJ,MAAOA,EACPK,QAJU,IAAIC,MAIFC,UAAyB,IAAbJ,GAG1BK,aAAaC,QAAQP,EAAKQ,KAAKC,UAAUP,KAG9BZ,EAAgB,SAACU,GAC5B,IAAMU,EAAcJ,aAAaK,QAAQX,GACzC,IAAKU,EACH,OAAO,KAGT,IAAMR,EAAOM,KAAKI,MAAMF,GAGxB,OAFY,IAAIN,MAERC,UAAYH,EAAKC,QACvBG,aAAaO,WAAWb,GACjB,MAGFE,EAAKJ","file":"static/js/7.bc8ec8c3.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const StyledToggle = styled.div<{ selected?: boolean }>`\n  color: ${(props) => props.theme.primary};\n  background: ${(props) =>\n    props.selected ? props.theme.secondary : props.theme.background};\n  border: 1px solid ${(props) => props.theme.secondary};\n  padding: 6px;\n  font-weight: 500;\n  cursor: pointer;\n  font-size: 16px;\n  -moz-transition: all 0.2s ease-in;\n  -o-transition: all 0.2s ease-in;\n  -webkit-transition: all 0.2s ease-in;\n  transition: all 0.2s ease-in;\n  pointer-events: ${(props) => (props.selected ? \"none\" : \"auto\")};\n\n  &:hover {\n    color: ${(props) =>\n      props.selected ? props.theme.primary : props.theme.secondary};\n    cursor: ${(props) => (props.selected ? \"default\" : \"pointer\")};\n  }\n  &:active {\n    opacity: ${(props) => (props.selected ? \"1\" : \"0.6\")};\n  }\n`;\n","import React, { useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { AppContext } from \"../../AppContext\";\nimport { StyledToggle } from \"../toggle-button/styled-toggle\";\n\nexport const FavouritesType = () => {\n  const { favouritesType, setFavouritesType } = useContext(AppContext);\n\n  return (\n    <FavouritesOptionsContainer>\n      <StyledToggle\n        selected={favouritesType === \"tracks\"}\n        onClick={() => setFavouritesType(\"tracks\")}\n      >\n        Tracks\n      </StyledToggle>\n      <StyledToggle\n        selected={favouritesType === \"artists\"}\n        onClick={() => setFavouritesType(\"artists\")}\n      >\n        Artists\n      </StyledToggle>\n    </FavouritesOptionsContainer>\n  );\n};\n\nconst FavouritesOptionsContainer = styled.div`\n  display: flex;\n  align-items: center;\n`;\n","import React, { useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { AppContext } from \"../../AppContext\";\nimport { StyledToggle } from \"../toggle-button/styled-toggle\";\n\nexport const TimeRange = () => {\n  const { selectedTimeRange, setSelectedTimeRange } = useContext(AppContext);\n\n  const handleClick = (timeRange: string) => {\n    const spotifyTopElement = document.querySelector(\n      \".spotify-top\"\n    ) as HTMLDivElement;\n    spotifyTopElement.style.opacity = \"0.2\";\n    setSelectedTimeRange(timeRange);\n    setTimeout(() => {\n      spotifyTopElement.style.opacity = \"1\";\n    }, 500);\n  };\n\n  return (\n    <TimeRangeContainer>\n      <StyledToggle\n        selected={selectedTimeRange === \"short\"}\n        onClick={() => handleClick(\"short\")}\n      >\n        Short\n      </StyledToggle>\n      <StyledToggle\n        selected={selectedTimeRange === \"medium\"}\n        onClick={() => handleClick(\"medium\")}\n      >\n        Medium\n      </StyledToggle>\n      <StyledToggle\n        selected={selectedTimeRange === \"long\"}\n        onClick={() => handleClick(\"long\")}\n      >\n        Long\n      </StyledToggle>\n    </TimeRangeContainer>\n  );\n};\n\nconst TimeRangeContainer = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  color: ${(props) => props.theme.primary};\n\n  @media only screen and (max-width: 768px) {\n    flex-direction: column;\n    align-items: flex-end;\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { FavouritesType } from \"./favourites-options\";\nimport { TimeRange } from \"./time-range\";\n\nexport const TopControls = () => (\n  <TopControlsContainer>\n    <FavouritesType />\n    <TimeRange />\n  </TopControlsContainer>\n);\n\nconst TopControlsContainer = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n`;\n","import React, { lazy, useContext, useEffect } from \"react\";\nimport { AppContext } from \"../AppContext\";\nimport { TopControls } from \"../components/top-controls/top-controls\";\nimport { getWithExpiry } from \"../util/storage-util\";\n\nconst SpotifySignInLazy = lazy(\n  () => import(\"../components/spotify-sign-in/spotify-sign-in\")\n);\nconst SpotifyTopArtistsLazy = lazy(\n  () => import(\"../components/spotify-top/spotify-top-artists\")\n);\n\nconst HomePage = () => {\n  const { hasSpotifyToken, setHasSpotifyToken } = useContext(AppContext);\n\n  useEffect(() => {\n    setHasSpotifyToken(getWithExpiry(\"spotifyToken\") != null);\n  }, [setHasSpotifyToken]);\n\n  return (\n    <>\n      {hasSpotifyToken ? (\n        <>\n          <TopControls />\n          <SpotifyTopArtistsLazy />\n        </>\n      ) : (\n        <SpotifySignInLazy />\n      )}\n    </>\n  );\n};\n\nexport default HomePage;\n","export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}","export const setWithExpiry = (key: string, value: any, ttlSeconds: number) => {\n  const now = new Date();\n\n  const item = {\n    value: value,\n    expiry: now.getTime() + ttlSeconds * 1000,\n  };\n\n  localStorage.setItem(key, JSON.stringify(item));\n};\n\nexport const getWithExpiry = (key: string) => {\n  const itemStorage = localStorage.getItem(key);\n  if (!itemStorage) {\n    return null;\n  }\n\n  const item = JSON.parse(itemStorage);\n  const now = new Date();\n\n  if (now.getTime() > item.expiry) {\n    localStorage.removeItem(key);\n    return null;\n  }\n\n  return item.value;\n};\n"],"sourceRoot":""}